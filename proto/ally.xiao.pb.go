// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.1
// source: ally.xiao.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListenSocketResponse_Code int32

const (
	ListenSocketResponse_EC_OK          ListenSocketResponse_Code = 0
	ListenSocketResponse_EC_PERMISSION  ListenSocketResponse_Code = 1 // 仅允许app实例访问此接口
	ListenSocketResponse_EC_BAD_ADDRESS ListenSocketResponse_Code = 2 // 地址格式问题
	ListenSocketResponse_EC_LISTEN      ListenSocketResponse_Code = 3 // listen失败
	ListenSocketResponse_EC_SEND        ListenSocketResponse_Code = 4 // 发送fd给app失败
)

// Enum value maps for ListenSocketResponse_Code.
var (
	ListenSocketResponse_Code_name = map[int32]string{
		0: "EC_OK",
		1: "EC_PERMISSION",
		2: "EC_BAD_ADDRESS",
		3: "EC_LISTEN",
		4: "EC_SEND",
	}
	ListenSocketResponse_Code_value = map[string]int32{
		"EC_OK":          0,
		"EC_PERMISSION":  1,
		"EC_BAD_ADDRESS": 2,
		"EC_LISTEN":      3,
		"EC_SEND":        4,
	}
)

func (x ListenSocketResponse_Code) Enum() *ListenSocketResponse_Code {
	p := new(ListenSocketResponse_Code)
	*p = x
	return p
}

func (x ListenSocketResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListenSocketResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[0].Descriptor()
}

func (ListenSocketResponse_Code) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[0]
}

func (x ListenSocketResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListenSocketResponse_Code.Descriptor instead.
func (ListenSocketResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{1, 0}
}

type CloseSocketResponse_Code int32

const (
	CloseSocketResponse_EC_OK          CloseSocketResponse_Code = 0
	CloseSocketResponse_EC_PERMISSION  CloseSocketResponse_Code = 1 // 仅允许app实例访问此接口
	CloseSocketResponse_EC_BAD_ADDRESS CloseSocketResponse_Code = 2 // 地址格式问题
)

// Enum value maps for CloseSocketResponse_Code.
var (
	CloseSocketResponse_Code_name = map[int32]string{
		0: "EC_OK",
		1: "EC_PERMISSION",
		2: "EC_BAD_ADDRESS",
	}
	CloseSocketResponse_Code_value = map[string]int32{
		"EC_OK":          0,
		"EC_PERMISSION":  1,
		"EC_BAD_ADDRESS": 2,
	}
)

func (x CloseSocketResponse_Code) Enum() *CloseSocketResponse_Code {
	p := new(CloseSocketResponse_Code)
	*p = x
	return p
}

func (x CloseSocketResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseSocketResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[1].Descriptor()
}

func (CloseSocketResponse_Code) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[1]
}

func (x CloseSocketResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseSocketResponse_Code.Descriptor instead.
func (CloseSocketResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{3, 0}
}

type ReloadAppResponse_Code int32

const (
	ReloadAppResponse_EC_OK         ReloadAppResponse_Code = 0
	ReloadAppResponse_EC_PERMISSION ReloadAppResponse_Code = 1 // 仅允许最新app实例访问此接口
	ReloadAppResponse_EC_RELOAD     ReloadAppResponse_Code = 2
)

// Enum value maps for ReloadAppResponse_Code.
var (
	ReloadAppResponse_Code_name = map[int32]string{
		0: "EC_OK",
		1: "EC_PERMISSION",
		2: "EC_RELOAD",
	}
	ReloadAppResponse_Code_value = map[string]int32{
		"EC_OK":         0,
		"EC_PERMISSION": 1,
		"EC_RELOAD":     2,
	}
)

func (x ReloadAppResponse_Code) Enum() *ReloadAppResponse_Code {
	p := new(ReloadAppResponse_Code)
	*p = x
	return p
}

func (x ReloadAppResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReloadAppResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[2].Descriptor()
}

func (ReloadAppResponse_Code) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[2]
}

func (x ReloadAppResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReloadAppResponse_Code.Descriptor instead.
func (ReloadAppResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{5, 0}
}

type HeartbeatResponse_Code int32

const (
	HeartbeatResponse_EC_OK         HeartbeatResponse_Code = 0
	HeartbeatResponse_EC_PERMISSION HeartbeatResponse_Code = 1 // 仅允许app实例访问此接口
)

// Enum value maps for HeartbeatResponse_Code.
var (
	HeartbeatResponse_Code_name = map[int32]string{
		0: "EC_OK",
		1: "EC_PERMISSION",
	}
	HeartbeatResponse_Code_value = map[string]int32{
		"EC_OK":         0,
		"EC_PERMISSION": 1,
	}
)

func (x HeartbeatResponse_Code) Enum() *HeartbeatResponse_Code {
	p := new(HeartbeatResponse_Code)
	*p = x
	return p
}

func (x HeartbeatResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeartbeatResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[3].Descriptor()
}

func (HeartbeatResponse_Code) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[3]
}

func (x HeartbeatResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeartbeatResponse_Code.Descriptor instead.
func (HeartbeatResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{7, 0}
}

type InstanceStat_Enum int32

const (
	InstanceStat_PREPARING InstanceStat_Enum = 0
	InstanceStat_RUNNING   InstanceStat_Enum = 1
	InstanceStat_CLOSING   InstanceStat_Enum = 2
)

// Enum value maps for InstanceStat_Enum.
var (
	InstanceStat_Enum_name = map[int32]string{
		0: "PREPARING",
		1: "RUNNING",
		2: "CLOSING",
	}
	InstanceStat_Enum_value = map[string]int32{
		"PREPARING": 0,
		"RUNNING":   1,
		"CLOSING":   2,
	}
)

func (x InstanceStat_Enum) Enum() *InstanceStat_Enum {
	p := new(InstanceStat_Enum)
	*p = x
	return p
}

func (x InstanceStat_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceStat_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[4].Descriptor()
}

func (InstanceStat_Enum) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[4]
}

func (x InstanceStat_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceStat_Enum.Descriptor instead.
func (InstanceStat_Enum) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{8, 0}
}

type AppStat_Enum int32

const (
	AppStat_STOPPED    AppStat_Enum = 0
	AppStat_BOOTING1   AppStat_Enum = 1 // 刚在boot
	AppStat_BOOTING2   AppStat_Enum = 2 // main启动了，但尚未ready
	AppStat_RUNNING    AppStat_Enum = 3
	AppStat_CLOSING    AppStat_Enum = 4
	AppStat_RELOADING1 AppStat_Enum = 5 // main在，进行booting
	AppStat_RELOADING2 AppStat_Enum = 6 // 新main启动了，但尚未ready
	AppStat_RELOADING3 AppStat_Enum = 7 // 新main已经ready，但是还有旧实例没结束
	AppStat_RECOVERING AppStat_Enum = 8 // main没有，且不是第一次boot
)

// Enum value maps for AppStat_Enum.
var (
	AppStat_Enum_name = map[int32]string{
		0: "STOPPED",
		1: "BOOTING1",
		2: "BOOTING2",
		3: "RUNNING",
		4: "CLOSING",
		5: "RELOADING1",
		6: "RELOADING2",
		7: "RELOADING3",
		8: "RECOVERING",
	}
	AppStat_Enum_value = map[string]int32{
		"STOPPED":    0,
		"BOOTING1":   1,
		"BOOTING2":   2,
		"RUNNING":    3,
		"CLOSING":    4,
		"RELOADING1": 5,
		"RELOADING2": 6,
		"RELOADING3": 7,
		"RECOVERING": 8,
	}
)

func (x AppStat_Enum) Enum() *AppStat_Enum {
	p := new(AppStat_Enum)
	*p = x
	return p
}

func (x AppStat_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppStat_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[5].Descriptor()
}

func (AppStat_Enum) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[5]
}

func (x AppStat_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppStat_Enum.Descriptor instead.
func (AppStat_Enum) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{9, 0}
}

type GetInstanceInfoResponse_Code int32

const (
	GetInstanceInfoResponse_EC_OK         GetInstanceInfoResponse_Code = 0
	GetInstanceInfoResponse_EC_PERMISSION GetInstanceInfoResponse_Code = 1 // 仅允许app实例访问此接口
)

// Enum value maps for GetInstanceInfoResponse_Code.
var (
	GetInstanceInfoResponse_Code_name = map[int32]string{
		0: "EC_OK",
		1: "EC_PERMISSION",
	}
	GetInstanceInfoResponse_Code_value = map[string]int32{
		"EC_OK":         0,
		"EC_PERMISSION": 1,
	}
)

func (x GetInstanceInfoResponse_Code) Enum() *GetInstanceInfoResponse_Code {
	p := new(GetInstanceInfoResponse_Code)
	*p = x
	return p
}

func (x GetInstanceInfoResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInstanceInfoResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_ally_xiao_proto_enumTypes[6].Descriptor()
}

func (GetInstanceInfoResponse_Code) Type() protoreflect.EnumType {
	return &file_ally_xiao_proto_enumTypes[6]
}

func (x GetInstanceInfoResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInstanceInfoResponse_Code.Descriptor instead.
func (GetInstanceInfoResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{13, 0}
}

type ListenSocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *ListenSocketRequest) Reset() {
	*x = ListenSocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenSocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenSocketRequest) ProtoMessage() {}

func (x *ListenSocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenSocketRequest.ProtoReflect.Descriptor instead.
func (*ListenSocketRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{0}
}

func (x *ListenSocketRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ListenSocketRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type ListenSocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  ListenSocketResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=xiao.ally.ListenSocketResponse_Code" json:"code,omitempty"`
	Error string                    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ListenSocketResponse) Reset() {
	*x = ListenSocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListenSocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListenSocketResponse) ProtoMessage() {}

func (x *ListenSocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListenSocketResponse.ProtoReflect.Descriptor instead.
func (*ListenSocketResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{1}
}

func (x *ListenSocketResponse) GetCode() ListenSocketResponse_Code {
	if x != nil {
		return x.Code
	}
	return ListenSocketResponse_EC_OK
}

func (x *ListenSocketResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CloseSocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CloseSocketRequest) Reset() {
	*x = CloseSocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSocketRequest) ProtoMessage() {}

func (x *CloseSocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSocketRequest.ProtoReflect.Descriptor instead.
func (*CloseSocketRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{2}
}

func (x *CloseSocketRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *CloseSocketRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CloseSocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  CloseSocketResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=xiao.ally.CloseSocketResponse_Code" json:"code,omitempty"`
	Error string                   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CloseSocketResponse) Reset() {
	*x = CloseSocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseSocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseSocketResponse) ProtoMessage() {}

func (x *CloseSocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseSocketResponse.ProtoReflect.Descriptor instead.
func (*CloseSocketResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{3}
}

func (x *CloseSocketResponse) GetCode() CloseSocketResponse_Code {
	if x != nil {
		return x.Code
	}
	return CloseSocketResponse_EC_OK
}

func (x *CloseSocketResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReloadAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReloadAppRequest) Reset() {
	*x = ReloadAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadAppRequest) ProtoMessage() {}

func (x *ReloadAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadAppRequest.ProtoReflect.Descriptor instead.
func (*ReloadAppRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{4}
}

type ReloadAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  ReloadAppResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=xiao.ally.ReloadAppResponse_Code" json:"code,omitempty"`
	Error string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ReloadAppResponse) Reset() {
	*x = ReloadAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReloadAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadAppResponse) ProtoMessage() {}

func (x *ReloadAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadAppResponse.ProtoReflect.Descriptor instead.
func (*ReloadAppResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{5}
}

func (x *ReloadAppResponse) GetCode() ReloadAppResponse_Code {
	if x != nil {
		return x.Code
	}
	return ReloadAppResponse_EC_OK
}

func (x *ReloadAppResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready       bool   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Tasks       uint64 `protobuf:"varint,2,opt,name=tasks,proto3" json:"tasks,omitempty"`
	Commit      string `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"`
	Version     string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatRequest) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *HeartbeatRequest) GetTasks() uint64 {
	if x != nil {
		return x.Tasks
	}
	return 0
}

func (x *HeartbeatRequest) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *HeartbeatRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HeartbeatRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  HeartbeatResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=xiao.ally.HeartbeatResponse_Code" json:"code,omitempty"`
	Error string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatResponse) GetCode() HeartbeatResponse_Code {
	if x != nil {
		return x.Code
	}
	return HeartbeatResponse_EC_OK
}

func (x *HeartbeatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type InstanceStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstanceStat) Reset() {
	*x = InstanceStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceStat) ProtoMessage() {}

func (x *InstanceStat) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceStat.ProtoReflect.Descriptor instead.
func (*InstanceStat) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{8}
}

type AppStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppStat) Reset() {
	*x = AppStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppStat) ProtoMessage() {}

func (x *AppStat) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppStat.ProtoReflect.Descriptor instead.
func (*AppStat) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{9}
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`  // 网络名称
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`  // 地址值
	Refs    uint64 `protobuf:"varint,3,opt,name=refs,proto3" json:"refs,omitempty"`       // 引用计数
	Created int64  `protobuf:"varint,4,opt,name=created,proto3" json:"created,omitempty"` // 首次被引用时间戳(纳秒)
	Updated int64  `protobuf:"varint,5,opt,name=updated,proto3" json:"updated,omitempty"` // 最后被引用、解除引用的时间戳(纳秒)
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{10}
}

func (x *Address) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Address) GetRefs() uint64 {
	if x != nil {
		return x.Refs
	}
	return 0
}

func (x *Address) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Address) GetUpdated() int64 {
	if x != nil {
		return x.Updated
	}
	return 0
}

type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                       // app实例的id序列，总是从1开始，每次reload递增1
	Pid         uint64            `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`                                     // app实例的pid
	Cpu         float64           `protobuf:"fixed64,3,opt,name=cpu,proto3" json:"cpu,omitempty"`                                    // app实例的cpu实时使用率
	Ram         float64           `protobuf:"fixed64,4,opt,name=ram,proto3" json:"ram,omitempty"`                                    // app实例的内存实时使用量，Bytes
	Appname     string            `protobuf:"bytes,5,opt,name=appname,proto3" json:"appname,omitempty"`                              // app的名称
	Family      string            `protobuf:"bytes,6,opt,name=family,proto3" json:"family,omitempty"`                                // app的家族
	StartTime   int64             `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`        // app实例的启动时间戳(纳秒)
	Tasks       uint64            `protobuf:"varint,8,opt,name=tasks,proto3" json:"tasks,omitempty"`                                 // app实例上报不可中断的任务数量
	Commit      string            `protobuf:"bytes,9,opt,name=commit,proto3" json:"commit,omitempty"`                                // app实例上报的版本commit
	Version     string            `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`                             // app实例上报的版本号
	Description string            `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`                     // app实例上报的动态描述文字
	Stat        InstanceStat_Enum `protobuf:"varint,12,opt,name=stat,proto3,enum=xiao.ally.InstanceStat_Enum" json:"stat,omitempty"` // app实例的状态
	Addresses   []*Address        `protobuf:"bytes,13,rep,name=addresses,proto3" json:"addresses,omitempty"`                         // app实例在使用中的地址
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{11}
}

func (x *InstanceInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InstanceInfo) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *InstanceInfo) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *InstanceInfo) GetRam() float64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *InstanceInfo) GetAppname() string {
	if x != nil {
		return x.Appname
	}
	return ""
}

func (x *InstanceInfo) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *InstanceInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *InstanceInfo) GetTasks() uint64 {
	if x != nil {
		return x.Tasks
	}
	return 0
}

func (x *InstanceInfo) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *InstanceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstanceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InstanceInfo) GetStat() InstanceStat_Enum {
	if x != nil {
		return x.Stat
	}
	return InstanceStat_PREPARING
}

func (x *InstanceInfo) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// 获取本实例的信息
type GetInstanceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInstanceInfoRequest) Reset() {
	*x = GetInstanceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceInfoRequest) ProtoMessage() {}

func (x *GetInstanceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceInfoRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{12}
}

type GetInstanceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  GetInstanceInfoResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=xiao.ally.GetInstanceInfoResponse_Code" json:"code,omitempty"`
	Error string                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Info  *InstanceInfo                `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetInstanceInfoResponse) Reset() {
	*x = GetInstanceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceInfoResponse) ProtoMessage() {}

func (x *GetInstanceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceInfoResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{13}
}

func (x *GetInstanceInfoResponse) GetCode() GetInstanceInfoResponse_Code {
	if x != nil {
		return x.Code
	}
	return GetInstanceInfoResponse_EC_OK
}

func (x *GetInstanceInfoResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetInstanceInfoResponse) GetInfo() *InstanceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// config info
	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                             // app名称
	Family    string   `protobuf:"bytes,2,opt,name=family,proto3" json:"family,omitempty"`                         // app所属家族
	Bin       string   `protobuf:"bytes,3,opt,name=bin,proto3" json:"bin,omitempty"`                               // app binary全路径
	Pwd       string   `protobuf:"bytes,4,opt,name=pwd,proto3" json:"pwd,omitempty"`                               // app的工作目录
	Path      string   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`                             // app的工作PATH
	CrashWait uint64   `protobuf:"varint,6,opt,name=crash_wait,json=crashWait,proto3" json:"crash_wait,omitempty"` // app crash后是否自动拉起，以及拉起的间隔时长(毫秒)，值为0表示不自动拉起
	Args      []string `protobuf:"bytes,7,rep,name=args,proto3" json:"args,omitempty"`                             // app的启动参数表
	Envs      []string `protobuf:"bytes,8,rep,name=envs,proto3" json:"envs,omitempty"`                             // app启动时的额外环境变量值，VAR=VAL
	User      string   `protobuf:"bytes,15,opt,name=user,proto3" json:"user,omitempty"`                            // app启动时应当使用的用户id或name
	Group     string   `protobuf:"bytes,16,opt,name=group,proto3" json:"group,omitempty"`                          // app启动时应当使用的用户组id或name
	// running info
	Main      uint64       `protobuf:"varint,9,opt,name=main,proto3" json:"main,omitempty"`                              // 主实例的id
	StartTime int64        `protobuf:"varint,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`  // app首次的启动时间戳(纳秒)，即id=1的实例启动时间
	LastError string       `protobuf:"bytes,11,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`   // 如果主实例运行失败或拉起失败，则记录最后一次拉起失败或主实例运行失败的错误信息
	Stat      AppStat_Enum `protobuf:"varint,12,opt,name=stat,proto3,enum=xiao.ally.AppStat_Enum" json:"stat,omitempty"` // app的状态
	Addresses []*Address   `protobuf:"bytes,13,rep,name=addresses,proto3" json:"addresses,omitempty"`                    // app关联的全部地址
	// instances info
	Instances []*InstanceInfo `protobuf:"bytes,14,rep,name=instances,proto3" json:"instances,omitempty"`   // 所有实例信息
	Enable    bool            `protobuf:"varint,100,opt,name=enable,proto3" json:"enable,omitempty"`       // bypass, 标记是否需要在ally wakeup时启动，此值恒为false
	Ephemeral bool            `protobuf:"varint,101,opt,name=ephemeral,proto3" json:"ephemeral,omitempty"` // bypass, 标记是否是临时app（未被invite），此值恒为true
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{14}
}

func (x *AppInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppInfo) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *AppInfo) GetBin() string {
	if x != nil {
		return x.Bin
	}
	return ""
}

func (x *AppInfo) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *AppInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AppInfo) GetCrashWait() uint64 {
	if x != nil {
		return x.CrashWait
	}
	return 0
}

func (x *AppInfo) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *AppInfo) GetEnvs() []string {
	if x != nil {
		return x.Envs
	}
	return nil
}

func (x *AppInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AppInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *AppInfo) GetMain() uint64 {
	if x != nil {
		return x.Main
	}
	return 0
}

func (x *AppInfo) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *AppInfo) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

func (x *AppInfo) GetStat() AppStat_Enum {
	if x != nil {
		return x.Stat
	}
	return AppStat_STOPPED
}

func (x *AppInfo) GetAddresses() []*Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *AppInfo) GetInstances() []*InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *AppInfo) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *AppInfo) GetEphemeral() bool {
	if x != nil {
		return x.Ephemeral
	}
	return false
}

type GetAppInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAppInfoRequest) Reset() {
	*x = GetAppInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoRequest) ProtoMessage() {}

func (x *GetAppInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAppInfoRequest) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{15}
}

type GetAppInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid       uint64   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`                              // ally的pid
	Cpu       float64  `protobuf:"fixed64,2,opt,name=cpu,proto3" json:"cpu,omitempty"`                             // ally的cpu实时使用率
	Ram       float64  `protobuf:"fixed64,3,opt,name=ram,proto3" json:"ram,omitempty"`                             // ally的内存实时使用量，Bytes
	Sock      string   `protobuf:"bytes,4,opt,name=sock,proto3" json:"sock,omitempty"`                             // ally sock的路径
	Commit    string   `protobuf:"bytes,5,opt,name=commit,proto3" json:"commit,omitempty"`                         // ally的版本commit信息
	Version   string   `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                       // ally的版本号
	StartTime int64    `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // ally的启动时间戳(纳秒)
	Info      *AppInfo `protobuf:"bytes,8,opt,name=info,proto3" json:"info,omitempty"`                             // app信息
}

func (x *GetAppInfoResponse) Reset() {
	*x = GetAppInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ally_xiao_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppInfoResponse) ProtoMessage() {}

func (x *GetAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ally_xiao_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppInfoResponse.ProtoReflect.Descriptor instead.
func (*GetAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_ally_xiao_proto_rawDescGZIP(), []int{16}
}

func (x *GetAppInfoResponse) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GetAppInfoResponse) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *GetAppInfoResponse) GetRam() float64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *GetAppInfoResponse) GetSock() string {
	if x != nil {
		return x.Sock
	}
	return ""
}

func (x *GetAppInfoResponse) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *GetAppInfoResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetAppInfoResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetAppInfoResponse) GetInfo() *AppInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_ally_xiao_proto protoreflect.FileDescriptor

var file_ally_xiao_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x22, 0x49, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x38, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x54, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x43, 0x5f, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x43, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x43, 0x5f, 0x42, 0x41, 0x44,
	0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x43,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x43, 0x5f,
	0x53, 0x45, 0x4e, 0x44, 0x10, 0x04, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x9e, 0x01, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x09, 0x0a, 0x05, 0x45, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x43,
	0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x45, 0x43, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x78, 0x69, 0x61, 0x6f,
	0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x43, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x45, 0x43, 0x5f, 0x52, 0x45, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x02, 0x22, 0x92, 0x01,
	0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x24, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x43, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0x3f, 0x0a, 0x0c, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x22, 0x2f, 0x0a, 0x04, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x4f, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x95, 0x01, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x22, 0x89, 0x01, 0x0a, 0x04, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x31, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x4f, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x32, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4c, 0x4f, 0x53, 0x49,
	0x4e, 0x47, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e,
	0x47, 0x31, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e,
	0x47, 0x32, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x4c, 0x4f, 0x41, 0x44, 0x49, 0x4e,
	0x47, 0x33, 0x10, 0x07, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x49,
	0x4e, 0x47, 0x10, 0x08, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xf3, 0x02, 0x0a,
	0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x70,
	0x75, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66,
	0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x78,
	0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x12, 0x30, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbf, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x69, 0x61, 0x6f,
	0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x43, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x22, 0xfc,
	0x03, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x77, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x61, 0x73, 0x68, 0x57, 0x61, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x65, 0x6e, 0x76, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2b, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x41, 0x70, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x30,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x65, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x22, 0x13, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x70, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x70, 0x75, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x72, 0x61, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xda, 0x03, 0x0a,
	0x04, 0x41, 0x6c, 0x6c, 0x79, 0x12, 0x4f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70,
	0x70, 0x12, 0x1b, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x52, 0x65,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x1b, 0x2e, 0x78, 0x69, 0x61, 0x6f,
	0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c,
	0x6c, 0x79, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x21, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x78, 0x69, 0x61, 0x6f, 0x2e, 0x61, 0x6c, 0x6c,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ally_xiao_proto_rawDescOnce sync.Once
	file_ally_xiao_proto_rawDescData = file_ally_xiao_proto_rawDesc
)

func file_ally_xiao_proto_rawDescGZIP() []byte {
	file_ally_xiao_proto_rawDescOnce.Do(func() {
		file_ally_xiao_proto_rawDescData = protoimpl.X.CompressGZIP(file_ally_xiao_proto_rawDescData)
	})
	return file_ally_xiao_proto_rawDescData
}

var file_ally_xiao_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_ally_xiao_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_ally_xiao_proto_goTypes = []any{
	(ListenSocketResponse_Code)(0),    // 0: xiao.ally.ListenSocketResponse.Code
	(CloseSocketResponse_Code)(0),     // 1: xiao.ally.CloseSocketResponse.Code
	(ReloadAppResponse_Code)(0),       // 2: xiao.ally.ReloadAppResponse.Code
	(HeartbeatResponse_Code)(0),       // 3: xiao.ally.HeartbeatResponse.Code
	(InstanceStat_Enum)(0),            // 4: xiao.ally.InstanceStat.Enum
	(AppStat_Enum)(0),                 // 5: xiao.ally.AppStat.Enum
	(GetInstanceInfoResponse_Code)(0), // 6: xiao.ally.GetInstanceInfoResponse.Code
	(*ListenSocketRequest)(nil),       // 7: xiao.ally.ListenSocketRequest
	(*ListenSocketResponse)(nil),      // 8: xiao.ally.ListenSocketResponse
	(*CloseSocketRequest)(nil),        // 9: xiao.ally.CloseSocketRequest
	(*CloseSocketResponse)(nil),       // 10: xiao.ally.CloseSocketResponse
	(*ReloadAppRequest)(nil),          // 11: xiao.ally.ReloadAppRequest
	(*ReloadAppResponse)(nil),         // 12: xiao.ally.ReloadAppResponse
	(*HeartbeatRequest)(nil),          // 13: xiao.ally.HeartbeatRequest
	(*HeartbeatResponse)(nil),         // 14: xiao.ally.HeartbeatResponse
	(*InstanceStat)(nil),              // 15: xiao.ally.InstanceStat
	(*AppStat)(nil),                   // 16: xiao.ally.AppStat
	(*Address)(nil),                   // 17: xiao.ally.Address
	(*InstanceInfo)(nil),              // 18: xiao.ally.InstanceInfo
	(*GetInstanceInfoRequest)(nil),    // 19: xiao.ally.GetInstanceInfoRequest
	(*GetInstanceInfoResponse)(nil),   // 20: xiao.ally.GetInstanceInfoResponse
	(*AppInfo)(nil),                   // 21: xiao.ally.AppInfo
	(*GetAppInfoRequest)(nil),         // 22: xiao.ally.GetAppInfoRequest
	(*GetAppInfoResponse)(nil),        // 23: xiao.ally.GetAppInfoResponse
}
var file_ally_xiao_proto_depIdxs = []int32{
	0,  // 0: xiao.ally.ListenSocketResponse.code:type_name -> xiao.ally.ListenSocketResponse.Code
	1,  // 1: xiao.ally.CloseSocketResponse.code:type_name -> xiao.ally.CloseSocketResponse.Code
	2,  // 2: xiao.ally.ReloadAppResponse.code:type_name -> xiao.ally.ReloadAppResponse.Code
	3,  // 3: xiao.ally.HeartbeatResponse.code:type_name -> xiao.ally.HeartbeatResponse.Code
	4,  // 4: xiao.ally.InstanceInfo.stat:type_name -> xiao.ally.InstanceStat.Enum
	17, // 5: xiao.ally.InstanceInfo.addresses:type_name -> xiao.ally.Address
	6,  // 6: xiao.ally.GetInstanceInfoResponse.code:type_name -> xiao.ally.GetInstanceInfoResponse.Code
	18, // 7: xiao.ally.GetInstanceInfoResponse.info:type_name -> xiao.ally.InstanceInfo
	5,  // 8: xiao.ally.AppInfo.stat:type_name -> xiao.ally.AppStat.Enum
	17, // 9: xiao.ally.AppInfo.addresses:type_name -> xiao.ally.Address
	18, // 10: xiao.ally.AppInfo.instances:type_name -> xiao.ally.InstanceInfo
	21, // 11: xiao.ally.GetAppInfoResponse.info:type_name -> xiao.ally.AppInfo
	7,  // 12: xiao.ally.Ally.ListenSocket:input_type -> xiao.ally.ListenSocketRequest
	9,  // 13: xiao.ally.Ally.CloseSocket:input_type -> xiao.ally.CloseSocketRequest
	11, // 14: xiao.ally.Ally.ReloadApp:input_type -> xiao.ally.ReloadAppRequest
	13, // 15: xiao.ally.Ally.Heartbeat:input_type -> xiao.ally.HeartbeatRequest
	22, // 16: xiao.ally.Ally.GetAppInfo:input_type -> xiao.ally.GetAppInfoRequest
	19, // 17: xiao.ally.Ally.GetInstanceInfo:input_type -> xiao.ally.GetInstanceInfoRequest
	8,  // 18: xiao.ally.Ally.ListenSocket:output_type -> xiao.ally.ListenSocketResponse
	10, // 19: xiao.ally.Ally.CloseSocket:output_type -> xiao.ally.CloseSocketResponse
	12, // 20: xiao.ally.Ally.ReloadApp:output_type -> xiao.ally.ReloadAppResponse
	14, // 21: xiao.ally.Ally.Heartbeat:output_type -> xiao.ally.HeartbeatResponse
	23, // 22: xiao.ally.Ally.GetAppInfo:output_type -> xiao.ally.GetAppInfoResponse
	20, // 23: xiao.ally.Ally.GetInstanceInfo:output_type -> xiao.ally.GetInstanceInfoResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_ally_xiao_proto_init() }
func file_ally_xiao_proto_init() {
	if File_ally_xiao_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ally_xiao_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ListenSocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ListenSocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CloseSocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ReloadAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ReloadAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AppStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstanceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetInstanceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ally_xiao_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetAppInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ally_xiao_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ally_xiao_proto_goTypes,
		DependencyIndexes: file_ally_xiao_proto_depIdxs,
		EnumInfos:         file_ally_xiao_proto_enumTypes,
		MessageInfos:      file_ally_xiao_proto_msgTypes,
	}.Build()
	File_ally_xiao_proto = out.File
	file_ally_xiao_proto_rawDesc = nil
	file_ally_xiao_proto_goTypes = nil
	file_ally_xiao_proto_depIdxs = nil
}
